package products

import(
    "main/pkg/helpers"
    "main/server/admin/view/shared"
    "main/internal/model"
)

templ Update(Product model.Products, Categories []shared.SelectDataType) {
    <div tabindex="-1" class="absolute w-[80vw] mx-auto h-[100vh] overflow-y-auto overflow-x-hidden top-0 right-0 left-0 z-50 justify-center items-center md:inset-0">
        
        <div class="relative p-4 w-full h-full ">
            <form class="relative bg-white rounded-lg shadow-lg w-full h-full">
                <button @click="show = false"
                        type="button" class="absolute top-3 end-2.5 text-white bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center" data-modal-hide="popup-modal">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                    </svg>
                    <span class="sr-only">Close modal</span>
                </button>

                <div class="w-full p-10" x-data={"{ product: " + helpers.ToJson(Product) + " }"}>
                    <h2 class="w-full text-3xl"> 
                        პროდუქტი #{ helpers.String(int(Product.ID)) } / { Product.Name }
                    </h2>

                    <div class="py-10 w-full flex flex-col gap-10 ">
                        <div x-data='{ value: product.Name }'>
                            @shared.Input("update-name", "სახელი")
                            <input class="hidden" name="Name" :value='value' />
                        </div>

                        <div x-data='{ value: product.Category.ID }'>
                            @shared.Select("update-category", "აირჩიე კატეგორია", Categories)
                            <input  class="hidden" name="CategoryID" :value='value' />
                        </div>

                        <div x-data='{ value: product.Description }'>
                            @shared.Input("update-Description", "მოკლე აღწერა")
                            <input class="hidden" name="Description" :value='value' />
                        </div>

                        <div x-data='{ value: product.DescriptionHtml }' class="overflow-y-auto h-[40vh]">
                            <input  class="w-full h-full hidden" 
                                    name="DescriptionHtml" id="ProductEditor" 
                                    value={Product.DescriptionHtml} 
                                    />
                            @ProductCke(Product.DescriptionHtml)
                        </div>
                    </div>
                </div>

                <div class="p-10 text-center fixed bottom-5">
                    <button @click="modal.update = false" type="button" 
                            hx-put={"/admin/products/" + helpers.String(int(Product.ID))}
                            hx-trigger="click"
                            hx-target="#AdminContent" 
                            hx-swap="innerHTML show:window:top"
                            class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center">შენახვა</button>
                    
                    <button @click="modal.update = false" type="button" 
                            class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">გაუქმება</button>
                </div>
            </form>
        </div>
    </div>
}


script ProductCke(ProductContent string) {
    console.log("hi")

    const Te = ClassicEditor.create(
        document.querySelector( '#ProductEditor' ), 
        window.ckeConfig
    ).then(editor => {
        editor.setData(ProductContent)
        editor.model.document.on( 'change:data', () => editor.sourceElement.value = editor.getData())
    }).catch(e => console.log("ckeditor ->", e))
}


// <div>
//     <div class="relative z-0">
//         <input type="text" id="standard_error" aria-describedby="standard_error_help" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-red-600 appearance-none dark:text-white dark:border-red-500 dark:focus:border-red-500 focus:outline-none focus:ring-0 focus:border-red-600 peer" placeholder=" " />
//         <label for="standard_error" class="absolute text-sm text-red-600 dark:text-red-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto">Standard error</label>
//     </div>
//     <p id="standard_error_help" class="mt-2 text-xs text-red-600 dark:text-red-400"><span class="font-medium">Oh, snapp!</span> Some error message.</p>
// </div>